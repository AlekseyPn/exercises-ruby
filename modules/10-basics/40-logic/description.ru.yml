---
name: Логика
theory: |
  В этом уроке поговорим про логические операции — и, или, отрицание; а также про то, как это организовывается в руби.

  В Ruby используются 3 основных логических оператора:

  * `&&` — и
  * `||` — или
  * `!` — не

  Операторы `&&` и `||` бинарные — с обеих сторон должно быть какое-то выражение. Оператор `!` — унарный, пишется перед переменной.

  ```ruby
  a = false
  b = true

  a || b # => true
  b && a # => false
  b && b # => false

  !a # => true

  b && !a # => true
  ```

  Для сравнения чисел используются операторы `==`, `!=`, `<`, `>`, `<=`, `>=`.

  Функции, которые возвращают true или false, принято называть предикатами. В Ruby есть договорённость — названия предикатов заканчиваются на `?`.

  ```ruby
  def even?(number)
    number % 2 == 0
  end

  even?(2) # => true
  even?(1) # => false
  ```

instructions: |
  Клининговой компании нужна функция, которая расскажет, можно ли назначить уборщицу на заказ.
  Уборка назначается, если уборщица работает в этот день и ей не назначены уборки на сегодня. При необходимости, мы можем назначить заказ в сверхурочное время или отправить её на другой.

  Напишите метод `can_take_order?`, который принимает 3 аргумента:

  * Работает ли уборщица в этот день?
  * Есть ли у неё заказы на эту дату?
  * Согласны ли мы на сверхурочную работу?

  У всех аргументов только два допустимых значения: `true` или `false`.

  Метод должен вернуть `true`, если уборщицу можно назначить и `false` если нет.

tips: []
