---
name: Трансляция символов в блоки
theory: |

  В Ruby коде, часто, можно увидеть странную конструкцию из амперсанда соединного с символом:

  ```ruby
  ['hexlet', 'code-basics'].map(&:upcase) # ["HEXLET", "CODE-BASICS"]
  # Тоже самое
  # ['hexlet', 'code-basics'].map { |name| name.upcase }
  ```

  Попробуем разобраться с тем что это такое. Если кратко, то мы видим преобразование символа в блок и последующую передачу блока в функцию как блока. Теперь к деталям.

  Начнем с блоков. С одной стороны у блоков есть особый синтаксис создания и передачи в функции как особого параметра. С другой стороны, сам блок это объект как и все остальное в языке. За блоки в Ruby отвечает класс `Proc`:

  ```ruby
  # Немного взрывает мозг что блок определяется через свой же синтаксис
  square = Proc.new {|x| x**2 }
  ```

  Приведение типов данных работает предсказуемо для простых типов. Например число `1` при преобразовании в строку превратится в строку `'1'` и так далее.



instructions: |

  В разработке

tips: []
